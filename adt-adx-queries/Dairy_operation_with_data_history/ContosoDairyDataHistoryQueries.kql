// Copy and paste each query below into Azure Data Explorer. To run a query, click on the query to highlight it and press the Run button. 
// In each query, replace <your_ADT_endpoint> with your instance's endpoint. Your endpoint should be in quotes, start with https://, and be followed by a semicolon. 
// For example: let ADTendpoint = "https://MyExampleADTinstance.api.wcus.digitaltwins.azure.net"; 
// Also, replace <table-name> with the name of your data history table

// Get a sample of the data history table
<table-name>
| where Key == 'InFlow'
| take 100

// Get all factories
let ADTendpoint = "<ADT-instance>";
let ADTquery =
```SELECT t.$dtId as Factories FROM DIGITALTWINS t
   WHERE IS_OF_MODEL(t , 'dtmi:assetGen:Factory;1')```;
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)

// Get all the operators employed in the Oslo Factory
let factory = "OsloFactory";
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT person.$dtId as tid FROM DIGITALTWINS
   MATCH (factory)-[:employs]->(person)
   WHERE factory.$dtId ='```, factory,"'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)

// Get all machines maintained by John in the OsloFactory
let factory = "OsloFactory";
let operator = "John";
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT machine.$dtId as tid FROM DIGITALTWINS
   MATCH (factory)-[:employs]->(person)-[:maintains]->(machine)
   WHERE person.$dtId = '```, operator,
   "' AND factory.$dtId = '", factory, "'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)

// Chart the 1-minute average OutFlow of each machine maintained by John in the OsloFactory over the past hour
let factory = "OsloFactory";
let operator = "John";
let sensor = "OutFlow";
let lookback = 1h;
let timeBin = 1m;
let ADTendpoint = "<ADT-instance>";
let chartTitle = strcat("1-Min Average ", sensor, " for Machines Maintained by ", operator, " in the ", factory);
let ADTquery = strcat(
```SELECT machine.$dtId as tid FROM DIGITALTWINS
   MATCH (factory)-[:employs]->(person)-[:maintains]->(machine)
   WHERE person.$dtId = '```, operator,
   "' AND factory.$dtId = '", factory, "'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=rightsemi (<table-name>
                       | where TimeStamp > ago(lookback)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize avg(Value_double) by bin(TimeStamp, timeBin),Id
| render timechart with (title=chartTitle)

// Chart the maximum 1-minute Inflow of any machine maintained by John in the OsloFactory over the past hour
let factory = "OsloFactory";
let operator = "John";
let sensor = "InFlow";
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Maximum ", sensor, " of Any Machines Maintained by ", operator, " in the ", factory);
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT machine.$dtId as tid FROM DIGITALTWINS
   MATCH (factory)-[:employs]->(person)-[:maintains]->(machine)
   WHERE person.$dtId = '```, operator,
   "' AND factory.$dtId = '", factory, "'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=rightsemi (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double=todouble(Value)
| summarize max(Value_double) by bin(TimeStamp, timeBin)
| render timechart with (title=chartTitle)

// Compare the  1-minute average "Outflow" of all machines that feed SaltMachine_C0 over the past hour
let downstreamMachine = "SaltMachine_C0";
let sensor = "OutFlow";
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Compare ",sensor, " from all Machines that feed into ", downstreamMachine);
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT upstreamMachine.$dtId as tid FROM DIGITALTWINS
   MATCH (upstreamMachine)-[:feeds]->(downstreamMachine)
   WHERE downstreamMachine.$dtId = '```, downstreamMachine, "'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=inner (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize avg(Value_double) by bin(TimeStamp, timeBin), tid_string
| render timechart with (title=chartTitle)

// Sum the"Outflow" from all machines that feed SaltMachine_C0
let downstreamMachine = "SaltMachine_C0";
let sensor = "OutFlow";
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Total ",sensor, " from all Machines that feed into ", downstreamMachine);
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT upstreamMachine.$dtId as tid FROM DIGITALTWINS
   MATCH (upstreamMachine)-[:feeds]->(downstreamMachine)
   WHERE downstreamMachine.$dtId = '```, downstreamMachine, "'");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=inner (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize avg(Value_double) by bin(TimeStamp, timeBin), tid_string
| summarize sum(avg_Value_double) by TimeStamp
| render timechart with (title=chartTitle)

// Compare the Outflow of all SaltMachines in the Oslo Factory
let machineType = "SaltMachine";
let sensor = "OutFlow";
let factory = "OsloFactory";
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Comparison of ",sensor, " from from all ", machineType,"s in the ", factory);
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT machine.$dtId as tid FROM DIGITALTWINS
   MATCH (factory)-[:contains]->(machine)
   WHERE factory.$dtId = '```, factory, "' and STARTSWITH(machine.$dtId, '", machineType, "')");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=rightsemi (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize avg(Value_double) by bin(TimeStamp, timeBin), Id
| render timechart with (title=chartTitle)

// Maximum 1-minute Outflow from any SaltMachine in any factories
let downstreamMachine = "SaltMachine_C0";
let sensor = "OutFlow";
let factoryIdList = "['OsloFactory', 'StockholmFactory']";
let machineType = 'SaltMachine';
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Maximum ", sensor, " from any ", machineType, " in the following factories:", factoryIdList);
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT machine.$dtId as tid FROM digitaltwins
   MATCH (factory)-[:contains]->(machine)
   WHERE factory.$dtId IN ```, factoryIdList,
   " AND CONTAINS(machine.$dtId,'",machineType,  "') ");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend tid_string = tostring(tid)
| join kind=rightsemi (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize max(Value_double) by bin(TimeStamp, timeBin)
| render timechart with (title=chartTitle)

// Compare the total Outflow from salt machines the OsloFactory vs those in the Stockholm factory
let sensor = "OutFlow";
let factoryList = "['OsloFactory', 'StockholmFactory']";
let machineType = 'SaltMachine';
let lookbackPeriod = 1h;
let timeBin = 1m;
let chartTitle = strcat("Comparison of total ", sensor, " (1-m avg) from  ", machineType, "s in ", factoryList, " Factories");
let ADTendpoint = "<ADT-instance>";
let ADTquery = strcat(
```SELECT machine.$dtId as machine_tid, factory.$dtId as factory_tid FROM digitaltwins
   MATCH (factory)-[:contains]->(machine)
   WHERE factory.$dtId in ```, factoryList,
   " AND CONTAINS(machine.$dtId,'",machineType,  "') ");
evaluate azure_digital_twins_query_request(ADTendpoint, ADTquery)
| extend machine_tid_string = tostring(machine_tid)
| extend factory_tid_string = tostring(factory_tid)
| join kind=inner (<table-name>
                       | where TimeStamp > ago(lookbackPeriod)
                         and Key == sensor)
    on $left.machine_tid_string == $right.Id
| extend Value_double = todouble(Value)
| summarize avg(Value_double) by bin(TimeStamp, timeBin), Id, factory_tid_string
| summarize sum(avg_Value_double) by TimeStamp, factory_tid_string
| render timechart with (title=chartTitle)
